{"version":3,"sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","src/maquette.ts"],"names":[],"mappings":"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","file":"maquette.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Utilities\r\n\r\nlet emptyArray = [];\r\n\r\nlet extend = function (base, overrides) {\r\n  let result = {};\r\n  Object.keys(base).forEach(function (key) {\r\n    result[key] = base[key];\r\n  });\r\n  if(overrides) {\r\n    Object.keys(overrides).forEach(function (key) {\r\n      result[key] = overrides[key];\r\n    });\r\n  }\r\n  return result;\r\n};\r\n\r\n// Hyperscript helper functions\r\n\r\nlet appendChildren = function (parentSelector, insertions, main) {\r\n  for(let i = 0; i < insertions.length; i++) {\r\n    let item = insertions[i];\r\n    if(Array.isArray(item)) {\r\n      appendChildren(parentSelector, item, main);\r\n    } else {\r\n      if(item !== null && item !== undefined) {\r\n        if(!item.hasOwnProperty(\"vnodeSelector\")) {\r\n          item = toTextVNode(item);\r\n        }\r\n        main.push(item);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nlet toTextVNode = function (data) {\r\n  return {\r\n    vnodeSelector: \"\",\r\n    properties: undefined,\r\n    children: undefined,\r\n    text: (data === null || data === undefined) ? \"\" : data.toString(),\r\n    domNode: null\r\n  };\r\n};\r\n\r\n// Render helper functions\r\n\r\nlet missingTransition = function() {\r\n  throw new Error(\"Provide a transitions object to the projectionOptions to do animations\");\r\n};\r\n\r\nlet defaultProjectionOptions = {\r\n  namespace: undefined,\r\n  eventHandlerInterceptor: undefined,\r\n  styleApplyer: function(domNode, styleName, value) {\r\n    // Provides a hook to add vendor prefixes for browsers that still need it.\r\n    domNode.style[styleName] = value;\r\n  },\r\n  transitions: {\r\n    enter: missingTransition,\r\n    exit: missingTransition\r\n  }\r\n};\r\n\r\nlet applyDefaultProjectionOptions = function (projectionOptions) {\r\n  return extend(defaultProjectionOptions, projectionOptions);\r\n};\r\n\r\nlet setProperties = function (domNode, properties, projectionOptions) {\r\n  if(!properties) {\r\n    return;\r\n  }\r\n  let eventHandlerInterceptor = projectionOptions.eventHandlerInterceptor;\r\n  for(let propName in properties) {\r\n    var propValue = properties[propName];\r\n    if(propName === \"class\" || propName === \"className\" || propName === \"classList\") {\r\n      throw new Error(\"Property \" + propName + \" is not supported, use 'classes' instead.\");\r\n    } else if(propName === \"classes\") {\r\n      // object with string keys and boolean values\r\n      for(let className in propValue) {\r\n        if(propValue[className]) {\r\n          domNode.classList.add(className);\r\n        }\r\n      }\r\n    } else if(propName === \"styles\") {\r\n      // object with string keys and string (!) values\r\n      for(let styleName in propValue) {\r\n        let styleValue = propValue[styleName];\r\n        if(styleValue) {\r\n          if(typeof styleValue !== \"string\") {\r\n            throw new Error(\"Style values may only be strings\");\r\n          }\r\n          projectionOptions.styleApplyer(domNode, styleName, styleValue);\r\n        }\r\n      }\r\n    } else if(propName === \"key\") {\r\n      continue;\r\n    } else if(propValue === null || propValue === undefined) {\r\n      continue;\r\n    } else {\r\n      let type = typeof propValue;\r\n      if(type === \"function\") {\r\n        if(eventHandlerInterceptor && (propName.lastIndexOf(\"on\", 0) === 0)) { // lastIndexOf(,0)===0 -> startsWith\r\n          propValue = eventHandlerInterceptor(propName, propValue, domNode, properties); // intercept eventhandlers\r\n          if(propName === \"oninput\") {\r\n            (function () {\r\n              // record the evt.target.value, because IE sometimes does a requestAnimationFrame between changing value and running oninput\r\n              let oldPropValue = propValue;\r\n              propValue = function (evt) {\r\n                evt.target[\"oninput-value\"] = evt.target.value;\r\n                oldPropValue.apply(this, [evt]);\r\n              };\r\n            }());\r\n          }\r\n        }\r\n        domNode[propName] = propValue;\r\n      } else if(type === \"string\" && propName !== \"value\") {\r\n        domNode.setAttribute(propName, propValue);\r\n      } else {\r\n        domNode[propName] = propValue;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nlet updateProperties = function (domNode, previousProperties, properties, projectionOptions) {\r\n  if(!properties) {\r\n    return;\r\n  }\r\n  let propertiesUpdated = false;\r\n  for(let propName in properties) {\r\n    // assuming that properties will be nullified instead of missing is by design\r\n    let propValue = properties[propName];\r\n    let previousValue = previousProperties[propName];\r\n    if(propName === \"classes\") {\r\n      let classList = domNode.classList;\r\n      for(let className in propValue) {\r\n        let on = !!propValue[className];\r\n        let previousOn = !!previousValue[className];\r\n        if(on === previousOn) {\r\n          continue;\r\n        }\r\n        propertiesUpdated = true;\r\n        if(on) {\r\n          classList.add(className);\r\n        } else {\r\n          classList.remove(className);\r\n        }\r\n      }\r\n    } else if(propName === \"styles\") {\r\n      for(let styleName in propValue) {\r\n        let newStyleValue = propValue[styleName];\r\n        let oldStyleValue = previousValue[styleName];\r\n        if(newStyleValue === oldStyleValue) {\r\n          continue;\r\n        }\r\n        propertiesUpdated = true;\r\n        if(newStyleValue) {\r\n          if(typeof newStyleValue !== \"string\") {\r\n            throw new Error(\"Style values may only be strings\");\r\n          }\r\n          projectionOptions.styleApplyer(domNode, styleName, newStyleValue);\r\n        } else {\r\n          projectionOptions.styleApplyer(domNode, styleName, \"\");\r\n        }\r\n      }\r\n    } else {\r\n      if(!propValue && typeof previousValue === \"string\") {\r\n        propValue = \"\";\r\n      }\r\n      if(propName === \"value\") { // value can be manipulated by the user directly and using event.preventDefault() is not an option\r\n        if(domNode[propName] !== propValue && domNode[\"oninput-value\"] !== propValue) {\r\n          domNode[propName] = propValue; // Reset the value, even if the virtual DOM did not change\r\n          domNode[\"oninput-value\"] = undefined;\r\n        } // else do not update the domNode, otherwise the cursor position would be changed\r\n        if(propValue !== previousValue) {\r\n          propertiesUpdated = true;\r\n        }\r\n      } else if(propValue !== previousValue) {\r\n        let type = typeof propValue;\r\n        if(type === \"function\") {\r\n          throw new Error(\"Functions may not be updated on subsequent renders (property: \" + propName +\r\n            \"). Hint: declare event handler functions outside the render() function.\");\r\n        }\r\n        if(type === \"string\") {\r\n          domNode.setAttribute(propName, propValue);\r\n        } else {\r\n          if(domNode[propName] !== propValue) { // Comparison is here for side-effects in Edge with scrollLeft and scrollTop\r\n            domNode[propName] = propValue;\r\n          }\r\n        }\r\n        propertiesUpdated = true;\r\n      }\r\n    }\r\n  }\r\n  return propertiesUpdated;\r\n};\r\n\r\nlet addChildren = function (domNode, children, projectionOptions) {\r\n  if(!children) {\r\n    return;\r\n  }\r\n  for(let i = 0; i < children.length; i++) {\r\n    createDom(children[i], domNode, undefined, projectionOptions);\r\n  }\r\n};\r\n\r\nlet same = function (vnode1, vnode2) {\r\n  if(vnode1.vnodeSelector !== vnode2.vnodeSelector) {\r\n    return false;\r\n  }\r\n  if(vnode1.properties && vnode2.properties) {\r\n    return vnode1.properties.key === vnode2.properties.key;\r\n  }\r\n  return !vnode1.properties && !vnode2.properties;\r\n};\r\n\r\nlet findIndexOfChild = function (children, sameAs, start) {\r\n  if(sameAs.vnodeSelector !== \"\") {\r\n    // Never scan for text-nodes\r\n    for(let i = start; i < children.length; i++) {\r\n      if(same(children[i], sameAs)) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\nlet nodeAdded = function (vNode, transitions) {\r\n  if(vNode.properties) {\r\n    let enterAnimation = vNode.properties.enterAnimation;\r\n    if(enterAnimation) {\r\n      if(typeof enterAnimation === \"function\") {\r\n        enterAnimation(vNode.domNode, vNode.properties);\r\n      } else {\r\n        transitions.enter(vNode.domNode, vNode.properties, enterAnimation);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nlet nodeToRemove = function (vNode, transitions) {\r\n  let domNode = vNode.domNode;\r\n  if(vNode.properties) {\r\n    let exitAnimation = vNode.properties.exitAnimation;\r\n    if(exitAnimation) {\r\n      domNode.style.pointerEvents = \"none\";\r\n      let removeDomNode = function () {\r\n        if(domNode.parentNode) {\r\n          domNode.parentNode.removeChild(domNode);\r\n        }\r\n      };\r\n      if(typeof exitAnimation === \"function\") {\r\n        exitAnimation(domNode, removeDomNode, vNode.properties);\r\n        return;\r\n      } else {\r\n        transitions.exit(vNode.domNode, vNode.properties, exitAnimation, removeDomNode);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  if(domNode.parentNode) {\r\n    domNode.parentNode.removeChild(domNode);\r\n  }\r\n};\r\n\r\nlet checkDistinguishable = function(childNodes, indexToCheck, parentVNode, operation) {\r\n  let childNode = childNodes[indexToCheck];\r\n  if (childNode.vnodeSelector === \"\") {\r\n    return; // Text nodes need not be distinguishable\r\n  }\r\n  let key = childNode.properties ? childNode.properties.key : undefined;\r\n  if (!key) { // A key is just assumed to be unique\r\n    for (let i = 0; i < childNodes.length; i++) {\r\n      if (i !== indexToCheck) {\r\n        let node = childNodes[i];\r\n        if (same(node, childNode)) {\r\n          if (operation === \"added\") {\r\n            throw new Error(parentVNode.vnodeSelector + \" had a \" + childNode.vnodeSelector + \" child \" +\r\n              \"added, but there is now more than one. You must add unique key properties to make them distinguishable.\");\r\n          } else {\r\n            throw new Error(parentVNode.vnodeSelector + \" had a \" + childNode.vnodeSelector + \" child \" +\r\n              \"removed, but there were more than one. You must add unique key properties to make them distinguishable.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nlet updateChildren = function (vnode, domNode, oldChildren, newChildren, projectionOptions) {\r\n  if(oldChildren === newChildren) {\r\n    return false;\r\n  }\r\n  oldChildren = oldChildren || emptyArray;\r\n  newChildren = newChildren || emptyArray;\r\n  let oldChildrenLength = oldChildren.length;\r\n  let newChildrenLength = newChildren.length;\r\n  let transitions = projectionOptions.transitions;\r\n\r\n  let oldIndex = 0;\r\n  let newIndex = 0;\r\n  let i;\r\n  let textUpdated = false;\r\n  while(newIndex < newChildrenLength) {\r\n    let oldChild = (oldIndex < oldChildrenLength) ? oldChildren[oldIndex] : undefined;\r\n    let newChild = newChildren[newIndex];\r\n    if(oldChild !== undefined && same(oldChild, newChild)) {\r\n      textUpdated = updateDom(oldChild, newChild, projectionOptions) || textUpdated;\r\n      oldIndex++;\r\n    } else {\r\n      let findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\r\n      if(findOldIndex >= 0) {\r\n        // Remove preceding missing children\r\n        for(i = oldIndex; i < findOldIndex; i++) {\r\n          nodeToRemove(oldChildren[i], transitions);\r\n          checkDistinguishable(oldChildren, i, vnode, \"removed\");\r\n        }\r\n        textUpdated = updateDom(oldChildren[findOldIndex], newChild, projectionOptions) || textUpdated;\r\n        oldIndex = findOldIndex + 1;\r\n      } else {\r\n        // New child\r\n        createDom(newChild, domNode, (oldIndex < oldChildrenLength) ? oldChildren[oldIndex].domNode : undefined, projectionOptions);\r\n        nodeAdded(newChild, transitions);\r\n        checkDistinguishable(newChildren, newIndex, vnode, \"added\");\r\n      }\r\n    }\r\n    newIndex++;\r\n  }\r\n  if(oldChildrenLength > oldIndex) {\r\n    // Remove child fragments\r\n    for(i = oldIndex; i < oldChildrenLength; i++) {\r\n      nodeToRemove(oldChildren[i], transitions);\r\n      checkDistinguishable(oldChildren, i, vnode, \"removed\");\r\n    }\r\n  }\r\n  return textUpdated;\r\n};\r\n\r\nlet createDom = function (vnode, parentNode, insertBefore, projectionOptions) {\r\n  let domNode, i, c, start = 0, type, found;\r\n  let vnodeSelector = vnode.vnodeSelector;\r\n  if(vnodeSelector === \"\") {\r\n    domNode = vnode.domNode = document.createTextNode(vnode.text);\r\n    if(insertBefore !== undefined) {\r\n      parentNode.insertBefore(domNode, insertBefore);\r\n    } else {\r\n      parentNode.appendChild(domNode);\r\n    }\r\n  } else {\r\n    for (i = 0; i <= vnodeSelector.length; ++i) {\r\n      c = vnodeSelector.charAt(i);\r\n      if (i === vnodeSelector.length || c === '.' || c === '#') {\r\n        type = vnodeSelector.charAt(start - 1);\r\n        found = vnodeSelector.slice(start, i);\r\n        if (type === \".\") {\r\n          domNode.classList.add(found);\r\n        } else if (type === \"#\") {\r\n          domNode.id = found;\r\n        } else {\r\n          if (found === \"svg\") {\r\n            projectionOptions = extend(projectionOptions, { namespace: \"http://www.w3.org/2000/svg\" });\r\n          }\r\n          if (projectionOptions.namespace !== undefined) {\r\n            domNode = vnode.domNode = document.createElementNS(projectionOptions.namespace, found);\r\n          } else {\r\n            domNode = vnode.domNode = document.createElement(found);\r\n          }\r\n          if (insertBefore !== undefined) {\r\n            parentNode.insertBefore(domNode, insertBefore);\r\n          } else {\r\n            parentNode.appendChild(domNode);\r\n          }\r\n        }\r\n        start = i + 1;\r\n      }\r\n    }\r\n    initPropertiesAndChildren(domNode, vnode, projectionOptions);\r\n  }\r\n};\r\n\r\nlet initPropertiesAndChildren = function (domNode, vnode, projectionOptions) {\r\n  addChildren(domNode, vnode.children, projectionOptions); // children before properties, needed for value property of <select>.\r\n  if(vnode.text) {\r\n    domNode.textContent = vnode.text;\r\n  }\r\n  setProperties(domNode, vnode.properties, projectionOptions);\r\n  if(vnode.properties && vnode.properties.afterCreate) {\r\n    vnode.properties.afterCreate(domNode, projectionOptions, vnode.vnodeSelector, vnode.properties, vnode.children);\r\n  }\r\n};\r\n\r\nlet updateDom = function (previous, vnode, projectionOptions) {\r\n  let domNode = previous.domNode;\r\n  if(!domNode) {\r\n    throw new Error(\"previous node was not rendered\");\r\n  }\r\n  let textUpdated = false;\r\n  if(previous === vnode) {\r\n    return textUpdated; // we assume that nothing has changed\r\n  }\r\n  let updated = false;\r\n  if(vnode.vnodeSelector === \"\") {\r\n    if(vnode.text !== previous.text) {\r\n      domNode.nodeValue = vnode.text;\r\n      textUpdated = true;\r\n    }\r\n  } else {\r\n    if(vnode.vnodeSelector.lastIndexOf(\"svg\", 0) === 0) { // lastIndexOf(needle,0)===0 means StartsWith\r\n      projectionOptions = extend(projectionOptions, { namespace: \"http://www.w3.org/2000/svg\" });\r\n    }\r\n    if(previous.text !== vnode.text) {\r\n      updated = true;\r\n      if(vnode.text === undefined) {\r\n        domNode.removeChild(domNode.firstChild); // the only textnode presumably\r\n      } else {\r\n        domNode.textContent = vnode.text;\r\n      }\r\n    }\r\n    updated = updateChildren(vnode, domNode, previous.children, vnode.children, projectionOptions) || updated;\r\n    updated = updateProperties(domNode, previous.properties, vnode.properties, projectionOptions) || updated;\r\n    if(vnode.properties && vnode.properties.afterUpdate) {\r\n      vnode.properties.afterUpdate(domNode, projectionOptions, vnode.vnodeSelector, vnode.properties, vnode.children);\r\n    }\r\n  }\r\n  if(updated && vnode.properties && vnode.properties.updateAnimation) {\r\n    vnode.properties.updateAnimation(domNode, vnode.properties, previous.properties);\r\n  }\r\n  vnode.domNode = previous.domNode;\r\n  return textUpdated;\r\n};\r\n\r\n/**\r\n * Represents a {@link VNode} tree that has been rendered to a real DOM tree.\r\n * @interface Projection\r\n */\r\nlet createProjection = function (vnode, projectionOptions) {\r\n  if(!vnode.vnodeSelector) {\r\n    throw new Error(\"Invalid vnode argument\");\r\n  }\r\n  return {\r\n    /**\r\n     * Updates the projection with the new virtual DOM tree.\r\n     * @param {VNode} updatedVnode - The updated virtual DOM tree. Note: The selector for the root of the tree must remain constant. \r\n     * @memberof Projection#\r\n     */\r\n    update: function (updatedVnode) {\r\n      if(vnode.vnodeSelector !== updatedVnode.vnodeSelector) {\r\n        throw new Error(\"The selector for the root VNode may not be changed. (consider using dom.merge and add one extra level to the virtual DOM)\");\r\n      }\r\n      updateDom(vnode, updatedVnode, projectionOptions);\r\n      vnode = updatedVnode;\r\n    },\r\n    /**\r\n     * The DOM node that is used as the root of this {@link Projection}.\r\n     * @type {Element}\r\n     * @memberof Projection#\r\n     */\r\n    domNode: vnode.domNode\r\n  };\r\n};\r\n\r\n// Declaration of interfaces and callbacks, before the @exports maquette\r\n\r\n/**\r\n * A virtual representation of a DOM Node. Maquette assumes that {@link VNode} objects are never modified externally.\r\n * Instances of {@link VNode} can be created using {@link module:maquette.h}.\r\n * @interface VNode\r\n */\r\n\r\n/**\r\n * A CalculationCache object remembers the previous outcome of a calculation along with the inputs. \r\n * On subsequent calls the previous outcome is returned if the inputs are identical. \r\n * This object can be used to bypass both rendering and diffing of a virtual DOM subtree.\r\n * Instances of {@link CalculationCache} can be created using {@link module:maquette.createCache}.\r\n * @interface CalculationCache\r\n */\r\n\r\n/**\r\n * Keeps an array of result objects synchronized with an array of source objects.\r\n * Mapping provides a {@link Mapping#map} function that updates the {@link Mapping#results}. \r\n * The {@link Mapping#map} function can be called multiple times and the results will get created, removed and updated accordingly.\r\n * A {@link Mapping} can be used to keep an array of components (objects with a `renderMaquette` method) synchronized with an array of data.\r\n * Instances of {@link Mapping} can be created using {@link module:maquette.createMapping}.\r\n * @interface Mapping\r\n */\r\n\r\n/**\r\n * Used to create and update the DOM.\r\n * Use {@link Projector#append}, {@link Projector#merge}, {@link Projector#insertBefore} and {@link Projector#replace} \r\n * to create the DOM.\r\n * The `renderMaquetteFunction` callbacks will be called immediately to create the DOM. Afterwards, these functions \r\n * will be called again to update the DOM on the next animation-frame after:\r\n * \r\n *  - The {@link Projector#scheduleRender} function  was called\r\n *  - An event handler (like `onclick`) on a rendered {@link VNode} was called.\r\n * \r\n * The projector stops when {@link Projector#stop} is called or when an error is thrown during rendering. \r\n * It is possible to use `window.onerror` to handle these errors.\r\n * Instances of {@link Projector} can be created using {@link module:maquette.createProjector}.\r\n * @interface Projector\r\n */\r\n\r\n/**\r\n * @callback enterAnimationCallback\r\n * @param {Element} element - Element that was just added to the DOM.\r\n * @param {Object} properties - The properties object that was supplied to the {@link module:maquette.h} method\r\n */\r\n\r\n/**\r\n * @callback exitAnimationCallback\r\n * @param {Element} element - Element that ought to be removed from to the DOM.\r\n * @param {function(Element)} removeElement - Function that removes the element from the DOM. \r\n * This argument is supplied purely for convenience. \r\n * You may use this function to remove the element when the animation is done.\r\n * @param {Object} properties - The properties object that was supplied to the {@link module:maquette.h} method that rendered this {@link VNode} the previous time.\r\n */\r\n\r\n/**\r\n * @callback updateAnimationCallback\r\n * @param {Element} element - Element that was modified in the DOM.\r\n * @param {Object} properties - The last properties object that was supplied to the {@link module:maquette.h} method\r\n * @param {Object} previousProperties - The previous properties object that was supplied to the {@link module:maquette.h} method\r\n */\r\n  \r\n/**\r\n * @callback afterCreateCallback\r\n * @param {Element} element - The element that was added to the DOM.\r\n * @param {Object} projectionOptions - The projection options that were used see {@link module:maquette.createProjector}.\r\n * @param {string} vnodeSelector - The selector passed to the {@link module:maquette.h} function.\r\n * @param {Object} properties - The properties passed to the {@link module:maquette.h} function.\r\n * @param {VNode[]} children - The children that were created.\r\n * @param {Object} properties - The last properties object that was supplied to the {@link module:maquette.h} method\r\n * @param {Object} previousProperties - The previous properties object that was supplied to the {@link module:maquette.h} method\r\n */\r\n\r\n/**\r\n * @callback afterUpdateCallback\r\n * @param {Element} element - The element that may have been updated in the DOM.\r\n * @param {Object} projectionOptions - The projection options that were used see {@link module:maquette.createProjector}.\r\n * @param {string} vnodeSelector - The selector passed to the {@link module:maquette.h} function.\r\n * @param {Object} properties - The properties passed to the {@link module:maquette.h} function.\r\n * @param {VNode[]} children - The children for this node.\r\n */\r\n  \r\n/**\r\n * Contains simple low-level utility functions to manipulate the real DOM. The singleton instance is available under {@link module:maquette.dom}.\r\n * @interface MaquetteDom\r\n */\r\n  \r\n/**\r\n * The `h` method is used to create a virtual DOM node. \r\n * This function is largely inspired by the mercuryjs and mithril frameworks.\r\n * The `h` stands for (virtual) hyperscript.\r\n * \r\n * @param {string} selector - Contains the tagName, id and fixed css classnames in CSS selector format. \r\n * It is formatted as follows: `tagname.cssclass1.cssclass2#id`. \r\n * @param {Object} [properties] - An object literal containing properties that will be placed on the DOM node.\r\n * @param {function} properties.<b>*</b> - Properties with functions values like `onclick:handleClick` are registered as event handlers\r\n * @param {String} properties.<b>*</b> - Properties with string values, like `href:\"/\"` are used as attributes\r\n * @param {object} properties.<b>*</b> - All non-string values are put on the DOM node as properties\r\n * @param {Object} properties.key - Used to uniquely identify a DOM node among siblings. \r\n * A key is required when there are more children with the same selector and these children are added or removed dynamically.\r\n * @param {Object} properties.classes - An object literal like `{important:true}` which allows css classes, like `important` to be added and removed dynamically.\r\n * @param {Object} properties.styles - An object literal like `{height:\"100px\"}` which allows styles to be changed dynamically. All values must be strings.\r\n * @param {(string|enterAnimationCallback)} properties.enterAnimation - The animation to perform when this node is added to an already existing parent. \r\n * {@link http://maquettejs.org/docs/animations.html|More about animations}.\r\n * When this value is a string, you must pass a `projectionOptions.transitions` object when creating the projector {@link module:maquette.createProjector}. \r\n * @param {(string|exitAnimationCallback)} properties.exitAnimation - The animation to perform when this node is removed while its parent remains.\r\n * When this value is a string, you must pass a `projectionOptions.transitions` object when creating the projector {@link module:maquette.createProjector}. \r\n * {@link http://maquettejs.org/docs/animations.html|More about animations}.\r\n * @param {updateAnimationCallback} properties.updateAnimation - The animation to perform when the properties of this node change. \r\n * This also includes attributes, styles, css classes. This callback is also invoked when node contains only text and that text changes.\r\n * {@link http://maquettejs.org/docs/animations.html|More about animations}.\r\n * @param {afterCreateCallback} properties.afterCreate - Callback that is executed after this node is added to the DOM. Childnodes and properties have already been applied.\r\n * @param {afterUpdateCallback} properties.afterUpdate - Callback that is executed every time this node may have been updated. Childnodes and properties have already been updated. \r\n * @param {Object[]} [children] - An array of virtual DOM nodes to add as child nodes. \r\n * This array may contain nested arrays, `null` or `undefined` values.\r\n * Nested arrays are flattened, `null` and `undefined` will be skipped.\r\n * \r\n * @returns {VNode} A VNode object, used to render a real DOM later. \r\n * NOTE: There are {@link http://maquettejs.org/docs/rules.html|three basic rules} you should be aware of when updating the virtual DOM.\r\n */\r\nexport let h = function (selector /*, ...propertiesAndChildren */) {\r\n  let properties = arguments[1];\r\n  if (typeof selector !== \"string\") {\r\n    throw new Error();\r\n  }\r\n  let childIndex = 1;\r\n  if (properties && !properties.hasOwnProperty(\"vnodeSelector\") && !Array.isArray(properties) && typeof properties === \"object\") {\r\n    childIndex = 2;\r\n  } else {\r\n    // Optional properties argument was omitted\r\n    properties = undefined;\r\n  }\r\n  let text = undefined;\r\n  let children = undefined;\r\n  let argsLength = arguments.length;\r\n  // Recognize a common special case where there is only a single text node\r\n  if(argsLength === childIndex + 1) {\r\n    let onlyChild = arguments[childIndex];\r\n    if (typeof onlyChild === \"string\") {\r\n      text = onlyChild;\r\n    } else if (onlyChild !== undefined && onlyChild.length === 1 && typeof onlyChild[0] === \"string\") {\r\n      text = onlyChild[0];\r\n    }\r\n  } \r\n  if (text === undefined) {\r\n    children = [];\r\n    for (;childIndex<arguments.length;childIndex++) {\r\n      let child = arguments[childIndex];\r\n      if(child === null || child === undefined) {\r\n        continue;\r\n      } else if(Array.isArray(child)) {\r\n        appendChildren(selector, child, children);\r\n      } else if(child.hasOwnProperty(\"vnodeSelector\")) {\r\n        children.push(child);\r\n      } else {\r\n        children.push(toTextVNode(child));\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    /** \r\n     * The CSS selector containing tagname, css classnames and id. An empty string is used to denote a text node. \r\n     * @memberof VNode# \r\n     */\r\n    vnodeSelector: selector,\r\n    /** \r\n     * Object containing attributes, properties, event handlers and more @see module:maquette.h \r\n     * @memberof VNode# \r\n     */\r\n    properties: properties,\r\n    /** \r\n     * Array of VNodes to be used as children. This array is already flattened. \r\n     * @memberof VNode# \r\n     */\r\n    children: children,\r\n    /**\r\n     * Used in a special case when a VNode only has one childnode which is a textnode. Only used in combination with children === undefined.\r\n     * @memberof VNode# \r\n     */\r\n    text: text,\r\n    /**\r\n     * Used by maquette to store the domNode that was produced from this {@link VNode}.\r\n     * @memberof VNode# \r\n     */\r\n    domNode: null\r\n  };\r\n};\r\n  \r\n/**\r\n * @type MaquetteDom\r\n */\r\nexport let dom = {\r\n  /**\r\n   * Creates a real DOM tree from a {@link VNode}. The {@link Projection} object returned will contain the resulting DOM Node under the {@link Projection#domNode} property. \r\n   * This is a low-level method. Users wil typically use a {@link Projector} instead. \r\n   * @memberof MaquetteDom#\r\n   * @param {VNode} vnode - The root of the virtual DOM tree that was created using the {@link module:maquette.h} function. NOTE: {@link VNode} objects may only be rendered once.\r\n   * @param {Object} projectionOptions - Options to be used to create and update the projection, see {@link module:maquette.createProjector}. \r\n   * @returns {Projection} The {@link Projection} which contains the DOM Node that was created.\r\n   */\r\n  create: function (vnode, projectionOptions) {\r\n    projectionOptions = applyDefaultProjectionOptions(projectionOptions);\r\n    createDom(vnode, document.createElement(\"div\"), undefined, projectionOptions);\r\n    return createProjection(vnode, projectionOptions);\r\n  },\r\n\r\n  /**\r\n   * Appends a new childnode to the DOM which is generated from a {@link VNode}. \r\n   * This is a low-level method. Users wil typically use a {@link Projector} instead. \r\n   * @memberof MaquetteDom#\r\n   * @param {Element} parentNode - The parent node for the new childNode.\r\n   * @param {VNode} vnode - The root of the virtual DOM tree that was created using the {@link module:maquette.h} function. NOTE: {@link VNode} objects may only be rendered once.\r\n   * @param {Object} projectionOptions - Options to be used to create and update the projection, see {@link module:maquette.createProjector}. \r\n   * @returns {Projection} The {@link Projection} that was created.\r\n   */\r\n  append: function (parentNode, vnode, projectionOptions) {\r\n    projectionOptions = applyDefaultProjectionOptions(projectionOptions);\r\n    createDom(vnode, parentNode, undefined, projectionOptions);\r\n    return createProjection(vnode, projectionOptions);\r\n  },\r\n  \r\n  /**\r\n   * Inserts a new DOM node which is generated from a {@link VNode}. \r\n   * This is a low-level method. Users wil typically use a {@link Projector} instead. \r\n   * @memberof MaquetteDom#\r\n   * @param {Element} beforeNode - The node that the DOM Node is inserted before.\r\n   * @param {VNode} vnode - The root of the virtual DOM tree that was created using the {@link module:maquette.h} function. NOTE: {@link VNode} objects may only be rendered once.\r\n   * @param {Object} projectionOptions - Options to be used to create and update the projection, see {@link module:maquette.createProjector}. \r\n   * @returns {Projection} The {@link Projection} that was created.\r\n   */\r\n  insertBefore: function(beforeNode, vnode, projectionOptions) {\r\n    projectionOptions = applyDefaultProjectionOptions(projectionOptions);\r\n    createDom(vnode, beforeNode.parentNode, beforeNode, projectionOptions);\r\n    return createProjection(vnode, projectionOptions);\r\n  },\r\n\r\n  /**\r\n   * Merges a new DOM node which is generated from a {@link VNode} with an existing DOM Node.\r\n   * This means that the virtual DOM and real DOM have one overlapping element. \r\n   * Therefore the selector for the root {@link VNode} will be ignored, but its properties and children will be applied to the Element provided \r\n   * This is a low-level method. Users wil typically use a {@link Projector} instead. \r\n   * @memberof MaquetteDom#\r\n   * @param {Element} domNode - The existing element to adopt as the root of the new virtual DOM. Existing attributes and childnodes are preserved.  \r\n   * @param {VNode} vnode - The root of the virtual DOM tree that was created using the {@link module:maquette.h} function. NOTE: {@link VNode} objects may only be rendered once.\r\n   * @param {Object} projectionOptions - Options to be used to create and update the projection, see {@link module:maquette.createProjector}. \r\n   * @returns {Projection} The {@link Projection} that was created.\r\n   */\r\n  merge: function (element, vnode, options) {\r\n    options = applyDefaultProjectionOptions(options);\r\n    vnode.domNode = element;\r\n    initPropertiesAndChildren(element, vnode, options);\r\n    return createProjection(vnode, options);\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a {@link CalculationCache} object, useful for caching {@link VNode} trees. \r\n * In practice, caching of {@link VNode} trees is not needed, because achieving 60 frames per second is almost never a problem.\r\n * @returns {CalculationCache}\r\n */\r\nexport let createCache = function () {\r\n  let cachedInputs = undefined;\r\n  let cachedOutcome = undefined;\r\n  let result = {\r\n    /**\r\n     * Manually invalidates the cached outcome.\r\n     * @memberof CalculationCache#\r\n     */\r\n    invalidate: function () {\r\n      cachedOutcome = undefined;\r\n      cachedInputs = undefined;\r\n    },\r\n    /**\r\n     * If the inputs array matches the inputs array from the previous invocation, this method returns the result of the previous invocation.\r\n     * Otherwise, the calculation function is invoked and its result is cached and returned. \r\n     * Objects in the inputs array are compared using ===.\r\n     * @param {Object[]} inputs - Array of objects that are to be compared using === with the inputs from the previous invocation. \r\n     * These objects are assumed to be immutable primitive values.\r\n     * @param {function} calculation - Function that takes zero arguments and returns an object (A {@link VNode} assumably) that can be cached.\r\n     * @memberof CalculationCache#\r\n     */\r\n    result: function (inputs, calculation) {\r\n      if(cachedInputs) {\r\n        for(let i = 0; i < inputs.length; i++) {\r\n          if(cachedInputs[i] !== inputs[i]) {\r\n            cachedOutcome = undefined;\r\n          }\r\n        }\r\n      }\r\n      if(!cachedOutcome) {\r\n        cachedOutcome = calculation();\r\n        cachedInputs = inputs;\r\n      }\r\n      return cachedOutcome;\r\n    }\r\n  };\r\n  return result;\r\n};\r\n  \r\n/**\r\n * Creates a {@link Mapping} instance that keeps an array of result objects synchronized with an array of source objects.\r\n * @param {function} getSourceKey - `function(source)` that must return a key to identify each source object. The result must eather be a string or a number.\r\n * @param {function} createResult - `function(source, index)` that must create a new result object from a given source. This function is identical argument of `Array.map`.\r\n * @param {function} updateResult - `function(source, target, index)` that updates a result to an updated source.\r\n * @returns {Mapping} \r\n */\r\nexport let createMapping = function(getSourceKey, createResult, updateResult /*, deleteTarget*/) {\r\n  let keys = [];\r\n  let results = [];\r\n  \r\n  return {\r\n    /**\r\n     * The array of results. These results will be synchronized with the latest array of sources that were provided using {@link Mapping#map}.\r\n     * @type {Object[]}\r\n     * @memberof Mapping#\r\n     */\r\n    results: results,\r\n    /**\r\n     * Maps a new array of sources and updates {@link Mapping#results}.\r\n     * @param {Object[]} newSources - The new array of sources.\r\n     * @memberof Mapping#\r\n     */\r\n    map: function(newSources) {\r\n      let newKeys = newSources.map(getSourceKey);\r\n      let oldTargets = results.slice();\r\n      let oldIndex = 0;\r\n      for (let i=0;i<newSources.length;i++) {\r\n        let source = newSources[i];\r\n        let sourceKey = newKeys[i];\r\n        if (sourceKey === keys[oldIndex]) {\r\n          results[i] = oldTargets[oldIndex];\r\n          updateResult(source, oldTargets[oldIndex], i);\r\n          oldIndex++;\r\n        } else {\r\n          let found = false;\r\n          for (let j = 1; j < keys.length; j++) {\r\n            let searchIndex = (oldIndex + j) % keys.length;\r\n            if (keys[searchIndex] === sourceKey) {\r\n              results[i] = oldTargets[searchIndex];\r\n              updateResult(newSources[i], oldTargets[searchIndex], i);\r\n              oldIndex = searchIndex + 1;\r\n              found = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!found) {\r\n            results[i] = createResult(source, i);\r\n          }\r\n        }\r\n      }\r\n      results.length = newSources.length;\r\n      keys = newKeys;\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Creates a {@link Projector} instance using the provided projectionOptions.\r\n * @param {Object} [projectionOptions] - Options that influence how the DOM is rendered and updated.\r\n * @param {Object} projectionOptions.transitions - A transition strategy to invoke when \r\n * enterAnimation and exitAnimation properties are provided as strings.\r\n * The module `cssTransitions` in the provided `css-transitions.js` file provides such a strategy. \r\n * A transition strategy is not needed when enterAnimation and exitAnimation properties are provided as functions.\r\n * @returns {Projector}\r\n */\r\nexport let createProjector = function (projectionOptions) {\r\n  projectionOptions = applyDefaultProjectionOptions(projectionOptions);\r\n  projectionOptions.eventHandlerInterceptor = function (propertyName, functionPropertyArgument) {\r\n    return function () {\r\n      // intercept function calls (event handlers) to do a render afterwards.\r\n      projector.scheduleRender();\r\n      return functionPropertyArgument.apply(this, arguments);\r\n    };\r\n  };\r\n  let renderCompleted = true;\r\n  let scheduled;\r\n  let stopped = false;\r\n  let projections = [];\r\n  let renderFunctions = []; // matches the projections array\r\n\r\n  let doRender = function () {\r\n    scheduled = undefined;\r\n    if (!renderCompleted) {\r\n      return; // The last render threw an error, it should be logged in the browser console. \r\n    }\r\n    renderCompleted = false;\r\n    for(let i = 0; i < projections.length; i++) {\r\n      let updatedVnode = renderFunctions[i]();\r\n      projections[i].update(updatedVnode);\r\n    }\r\n    renderCompleted = true;\r\n  };\r\n\r\n  let projector = {\r\n    /**\r\n     * Instructs the projector to re-render to the DOM at the next animation-frame using the registered `renderMaquette` functions.\r\n     * This method is automatically called for you when event-handlers that are registered in the {@link VNode}s are invoked.\r\n     * You need to call this method for instance when timeouts expire or AJAX responses arrive.\r\n     * @memberof Projector#\r\n     */\r\n    scheduleRender: function () {\r\n      if(!scheduled && !stopped) {\r\n        scheduled = requestAnimationFrame(doRender);\r\n      }\r\n    },\r\n    /**\r\n     * Stops the projector. This means that the registered `renderMaquette` functions will not be called anymore.\r\n     * Note that calling {@link Projector#stop} is not mandatory. A projector is a passive object that will get garbage collected as usual if it is no longer in scope.\r\n     * @memberof Projector#\r\n     */\r\n    stop: function () {\r\n      if(scheduled) {\r\n        cancelAnimationFrame(scheduled);\r\n        scheduled = undefined;\r\n      }\r\n      stopped = true;\r\n    },\r\n    \r\n    /**\r\n     * Resumes the projector. Use this method to resume rendering after stop was called or an error occurred during rendering.\r\n     * @memberof Projector#\r\n     */\r\n    resume: function() {\r\n      stopped = false;\r\n      renderCompleted = true;\r\n      projector.scheduleRender();\r\n    },\r\n    \r\n    /**\r\n     * Scans the document for `<script>` tags with `type=\"text/hyperscript\"`.\r\n     * The content of these scripts are registered as `renderMaquette` functions.\r\n     * The result of evaluating these functions will be inserted into the DOM after the script.\r\n     * These scripts can make use of variables that come from the `parameters` parameter.\r\n     * @param {Element} rootNode - Element to start scanning at, example: `document.body`.\r\n     * @param {Object} parameters - Variables to expose to the scripts. format: `{var1:value1, var2: value2}`\r\n     * @memberof Projector#\r\n     */\r\n    evaluateHyperscript: function (rootNode, parameters) {\r\n      let nodes = rootNode.querySelectorAll(\"script[type='text/hyperscript']\");\r\n      let functionParameters = [\"maquette\", \"h\", \"enhancer\"];\r\n      let parameterValues = [{h, dom, createCache, createMapping, createProjector}, h, projector];\r\n      Object.keys(parameters).forEach(function (parameterName) {\r\n        functionParameters.push(parameterName);\r\n        parameterValues.push(parameters[parameterName]);\r\n      });\r\n      Array.prototype.forEach.call(nodes, function (node) {\r\n        let func = new Function(...functionParameters, \"return \" + node.textContent.trim());\r\n        let renderFunction = function () {\r\n          return func.apply(undefined, parameterValues);\r\n        };\r\n        projector.insertBefore(node, renderFunction);\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * Appends a new childnode to the DOM using the result from the provided `renderMaquetteFunction`.\r\n     * The `renderMaquetteFunction` will be invoked again to update the DOM when needed.\r\n     * @param {Element} parentNode - The parent node for the new childNode.\r\n     * @param {function} renderMaquetteFunction - Function with zero arguments that returns a {@link VNode} tree.\r\n     * @memberof Projector#\r\n     */\r\n    append: function (parentNode, renderMaquetteFunction) {\r\n      projections.push(dom.append(parentNode, renderMaquetteFunction(), projectionOptions));\r\n      renderFunctions.push(renderMaquetteFunction);\r\n    },\r\n    \r\n    /**\r\n     * Inserts a new DOM node using the result from the provided `renderMaquetteFunction`.\r\n     * The `renderMaquetteFunction` will be invoked again to update the DOM when needed.\r\n     * @param {Element} beforeNode - The node that the DOM Node is inserted before.\r\n     * @param {function} renderMaquetteFunction - Function with zero arguments that returns a {@link VNode} tree.\r\n     * @memberof Projector#\r\n     */\r\n    insertBefore: function (beforeNode, renderMaquetteFunction) {\r\n      projections.push(dom.insertBefore(beforeNode, renderMaquetteFunction(), projectionOptions));\r\n      renderFunctions.push(renderMaquetteFunction);\r\n    },\r\n    \r\n    /**\r\n     * Merges a new DOM node using the result from the provided `renderMaquetteFunction` with an existing DOM Node.\r\n     * This means that the virtual DOM and real DOM have one overlapping element. \r\n     * Therefore the selector for the root {@link VNode} will be ignored, but its properties and children will be applied to the Element provided\r\n     * The `renderMaquetteFunction` will be invoked again to update the DOM when needed.\r\n     * @param {Element} domNode - The existing element to adopt as the root of the new virtual DOM. Existing attributes and childnodes are preserved.  \r\n     * @param {function} renderMaquetteFunction - Function with zero arguments that returns a {@link VNode} tree.\r\n     * @memberof Projector#\r\n     */\r\n    merge: function (domNode, renderMaquetteFunction) {\r\n      projections.push(dom.merge(domNode, renderMaquetteFunction(), projectionOptions));\r\n      renderFunctions.push(renderMaquetteFunction);\r\n    },\r\n    \r\n    /**\r\n     * Replaces an existing DOM node with the result from the provided `renderMaquetteFunction`.\r\n     * The `renderMaquetteFunction` will be invoked again to update the DOM when needed.\r\n     * @param {Element} domNode - The DOM node to replace.\r\n     * @param {function} renderMaquetteFunction - Function with zero arguments that returns a {@link VNode} tree.\r\n     * @memberof Projector#\r\n     */\r\n    replace: function (domNode, renderMaquetteFunction) {\r\n      let vnode = renderMaquetteFunction();\r\n      createDom(vnode, domNode.parentNode, domNode, projectionOptions);\r\n      domNode.parentNode.removeChild(domNode);\r\n      projections.push(createProjection(vnode, projectionOptions));\r\n      renderFunctions.push(renderMaquetteFunction);\r\n    }\r\n  };\r\n  return projector;\r\n};\r\n"]}